### Create Ingress Service ####

apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress
  namespace: nginx-ingress
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30274
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    nodePort: 30275
    protocol: TCP
    name: https
  - name: prometehus
    targetPort: 9113
    nodePort: 30276
    protocol: TCP
    port: 9113
  - name: dashboard
    targetPort: 8080
    nodePort: 30080
    protocol: TCP
    port: 8080
  selector:
    app: nginx-ingress
---

### Deploy Arcadia Ingress Service ####

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: arcadia-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    appprotect.f5.com/app-protect-policy: "default/dataguard-alarm"
    appprotect.f5.com/app-protect-enable: "True"
    appprotect.f5.com/app-protect-security-log-enable: "True"
    appprotect.f5.com/app-protect-security-log: "default/logconf"
    appprotect.f5.com/app-protect-security-log-destination: "syslog:server=syslog-svc.default:514"

spec:
  rules:
  - host: a380cd3f999d24824b46ee318e2dd16e-1542609639.us-east-2.elb.amazonaws.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: main
            port:
              number: 80
      - path: /files
        pathType: Prefix
        backend:
          service:
            name: backend
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: app2
            port:
              number: 80
      - path: /app3
        pathType: Prefix
        backend:
          service:
            name: app3
            port:
              number: 80